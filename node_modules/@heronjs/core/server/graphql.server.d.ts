/// <reference types="node" />
import { AbstractServer } from './abstract.server';
import { AdapterExtension, Any, GraphQLAdapter, IConnectable, Listener, Registrable, ServerOptions } from '@heronjs/common';
import { HeronContext } from '../context';
import { Server } from 'http';
import { Cache } from 'cache-manager';
export declare class GraphQLServer extends AbstractServer implements Registrable<Any, void>, Listener<ServerOptions, void>, IConnectable<Server, GraphQLServer> {
    private readonly _adapter;
    constructor(_adapter: GraphQLAdapter<Any, Any>);
    listen: (options?: ServerOptions) => Promise<void>;
    bind: (_context: HeronContext) => this;
    connect: (args?: Server) => Promise<GraphQLServer>;
    extension: (values: AdapterExtension<Cache, Any>) => Promise<any> | undefined;
    combine: (server: Any) => Promise<any>;
    register: (controller: Any) => Promise<void>;
}

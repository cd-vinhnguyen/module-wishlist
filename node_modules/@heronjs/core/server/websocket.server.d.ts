/// <reference types="node" />
import { HeronContext } from '../context';
import { AdapterExtension, Any, IConnectable, Listener, Registrable, ServerOptions, WebSocketAdapter } from '@heronjs/common';
import { AbstractServer } from './abstract.server';
import { Server } from 'http';
import { Cache } from 'cache-manager';
export declare class WebSocketServer extends AbstractServer implements Registrable<Any, Any>, Listener<ServerOptions, void>, IConnectable<Server, WebSocketServer> {
    #private;
    private readonly _adapter?;
    constructor(_adapter?: WebSocketAdapter<any> | undefined);
    bind: (_context: HeronContext) => this;
    connect: (args: Server) => Promise<WebSocketServer>;
    listen: (options?: ServerOptions) => Promise<void>;
    extension: (values: AdapterExtension<Cache, Any>) => Promise<any> | undefined;
    register: (controller: Any) => Promise<Any>;
    done: () => void;
}

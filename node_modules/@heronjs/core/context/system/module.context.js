"use strict";
var _ModuleContext_logger, _ModuleContext_di, _ModuleContext_gatekeeper, _ModuleContext_create, _ModuleContext_getDI, _ModuleContext_getGateKeeper;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModuleContext = void 0;
const tslib_1 = require("tslib");
const consts_1 = require("@heronjs/common/consts");
const common_1 = require("@heronjs/common");
const static_1 = require("../../static");
const errors_1 = require("@heronjs/common/errors");
const declarations_1 = require("@heronjs/common/declarations");
const uuid_1 = require("uuid");
class ModuleContext {
    constructor(ctxModule) {
        this.ctxModule = ctxModule;
        this.isInit = false;
        _ModuleContext_logger.set(this, new common_1.Logger(ModuleContext.name));
        _ModuleContext_di.set(this, void 0);
        _ModuleContext_gatekeeper.set(this, void 0);
        this.get = () => this;
        this.init = async () => {
            try {
                if (this.isInit) {
                    return this;
                }
                await tslib_1.__classPrivateFieldGet(this, _ModuleContext_create, "f").call(this);
                this.isInit = true;
            }
            catch (e) {
                (e instanceof Error) && tslib_1.__classPrivateFieldGet(this, _ModuleContext_logger, "f").fatal(e.message, e);
                await this.callShutdownHook(consts_1.ShutdownSignal.sigterm);
            }
            return this;
        };
        this.uid = () => this.ctxModule?.uuid || (0, uuid_1.v4)();
        _ModuleContext_create.set(this, async () => {
            this.di = tslib_1.__classPrivateFieldGet(this, _ModuleContext_getDI, "f").call(this, this.ctxModule);
            this.gatekeeper = tslib_1.__classPrivateFieldGet(this, _ModuleContext_getGateKeeper, "f").call(this, this.ctxModule);
            if (this.di) {
                this.root = await static_1.HeronStatic.create(this.ctxModule, this.di);
            }
            else
                throw new errors_1.ModuleError(consts_1.SYSErrors.MODULE_ERR, (0, consts_1.MODULE_INJECTOR_ERROR)(this.di));
        });
        this.callShutdownHook = async (signal) => {
            (0, common_1.__shutdownHook)(code => {
                tslib_1.__classPrivateFieldGet(this, _ModuleContext_logger, "f").error((0, consts_1.SYSTEM_SHUTTING_DOWN)(code));
            });
        };
        _ModuleContext_getDI.set(this, (module) => (0, common_1.__obtain)(declarations_1.MODULE_DI, module));
        _ModuleContext_getGateKeeper.set(this, (module) => (0, common_1.__obtain)(declarations_1.MODULE_GATEKEEPER, module));
    }
    get di() {
        return tslib_1.__classPrivateFieldGet(this, _ModuleContext_di, "f");
    }
    set di(value) {
        tslib_1.__classPrivateFieldSet(this, _ModuleContext_di, value, "f");
    }
    get gatekeeper() {
        return tslib_1.__classPrivateFieldGet(this, _ModuleContext_gatekeeper, "f");
    }
    set gatekeeper(value) {
        tslib_1.__classPrivateFieldSet(this, _ModuleContext_gatekeeper, value, "f");
    }
}
exports.ModuleContext = ModuleContext;
_ModuleContext_logger = new WeakMap(), _ModuleContext_di = new WeakMap(), _ModuleContext_gatekeeper = new WeakMap(), _ModuleContext_create = new WeakMap(), _ModuleContext_getDI = new WeakMap(), _ModuleContext_getGateKeeper = new WeakMap();

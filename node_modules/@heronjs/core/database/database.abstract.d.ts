import { KnexClient, DatabaseClient } from '../consts';
import { DatabaseConnector, DatabaseContext, ModuleDatabase } from '@heronjs/common/consts';
import { Any, Optional } from '@heronjs/common';
export declare abstract class AbstractKnexDatabaseClient<T extends KnexClient> implements ModuleDatabase<T>, DatabaseContext<T, DatabaseConnector<T>> {
    #private;
    config: Optional<Any>;
    protected constructor();
    context(): DatabaseContext<T, DatabaseConnector<T>>;
    database(): Optional<T>;
}
export declare abstract class AbstractDatabaseClient<T> implements ModuleDatabase<T>, DatabaseContext<T, DatabaseConnector<T>> {
    #private;
    config: Optional<Any>;
    protected constructor();
    abstract init(): DatabaseConnector<T>;
    context(): DatabaseContext<DatabaseClient<T>, DatabaseConnector<DatabaseClient<T>>>;
    database(): Optional<T>;
}

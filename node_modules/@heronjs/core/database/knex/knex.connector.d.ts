import { ConnectionMode, ConnectionPooling, DatabaseCluster, DatabaseConfig, DatabaseConnector, Optional } from '@heronjs/common/consts';
import { Knex } from 'knex';
import { Closable } from '@heronjs/common';
import { KnexClient } from '../../consts';
export declare type KnexConnectionConfig = Knex.MariaSqlConnectionConfig | Knex.ConnectionConfig | Knex.MySql2ConnectionConfig;
export declare const DATABASE_QUERIES: string[];
export declare class KnexConnector implements DatabaseConnector<KnexClient>, Closable<void> {
    #private;
    private readonly _databaseConfig;
    protected $knex: Optional<Knex>;
    protected $config?: KnexConnectionConfig;
    protected $mode: ConnectionMode;
    protected $cluster?: DatabaseCluster<Knex>;
    protected $pooling: ConnectionPooling;
    constructor(_databaseConfig: DatabaseConfig);
    get client(): string;
    set client(value: string);
    get<Knex>(): Optional<Knex>;
    close(): Promise<void>;
    connect: () => void;
}

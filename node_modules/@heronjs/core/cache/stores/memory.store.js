"use strict";
var _a, _MemoryStore_store;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MemoryStore = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@heronjs/common");
const cache_manager_1 = tslib_1.__importDefault(require("cache-manager"));
class MemoryStore {
    constructor(store) {
        this.store = store;
        _MemoryStore_store.set(this, void 0);
        this.get = () => {
            return this.store;
        };
        tslib_1.__classPrivateFieldSet(this, _MemoryStore_store, store, "f");
    }
}
exports.MemoryStore = MemoryStore;
_a = MemoryStore, _MemoryStore_store = new WeakMap();
MemoryStore.create = async (config) => {
    const { ttl, max, cacheValueValidator } = config;
    const cache = cache_manager_1.default.caching({
        store: 'memory',
        ttl,
        max,
        isCacheableValue: cacheValueValidator || common_1.isCacheableValue
    });
    return new MemoryStore(cache);
};

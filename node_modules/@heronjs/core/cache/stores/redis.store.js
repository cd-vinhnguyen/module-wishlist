"use strict";
var _a, _RedisStore_store;
Object.defineProperty(exports, "__esModule", { value: true });
exports.RedisStore = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@heronjs/common");
const cache_manager_1 = tslib_1.__importDefault(require("cache-manager"));
const ioredis_1 = tslib_1.__importDefault(require("ioredis"));
class RedisStore {
    constructor(store) {
        this.store = store;
        _RedisStore_store.set(this, void 0);
        this.get = () => {
            return this.store;
        };
        tslib_1.__classPrivateFieldSet(this, _RedisStore_store, store, "f");
    }
}
exports.RedisStore = RedisStore;
_a = RedisStore, _RedisStore_store = new WeakMap();
RedisStore.create = async (config) => {
    const redisStore = await Promise.resolve().then(() => tslib_1.__importStar(require('cache-manager-ioredis')));
    const { host, port, password, db, ttl, tls, cacheValueValidator } = config;
    const redisInstance = new ioredis_1.default({
        host, port, password,
        db, tls
    });
    const cache = cache_manager_1.default.caching({
        store: redisStore,
        redisInstance,
        ttl,
        isCacheableValue: cacheValueValidator || common_1.isCacheableValue
    });
    return new RedisStore(cache);
};

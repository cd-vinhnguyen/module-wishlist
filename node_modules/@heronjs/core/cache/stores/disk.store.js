"use strict";
var _a, _DiskStore_store;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiskStore = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@heronjs/common");
const cache_manager_1 = tslib_1.__importDefault(require("cache-manager"));
class DiskStore {
    constructor(store) {
        this.store = store;
        _DiskStore_store.set(this, void 0);
        this.get = () => {
            return this.store;
        };
        tslib_1.__classPrivateFieldSet(this, _DiskStore_store, store, "f");
    }
}
exports.DiskStore = DiskStore;
_a = DiskStore, _DiskStore_store = new WeakMap();
DiskStore.create = async (config) => {
    const diskStore = await Promise.resolve().then(() => tslib_1.__importStar(require('cache-manager-fs-hash')));
    const { path, subdirs, zip, ttl, cacheValueValidator } = config;
    const cache = cache_manager_1.default.caching({
        store: diskStore,
        path,
        subdirs,
        zip,
        ttl,
        isCacheableValue: cacheValueValidator || common_1.isCacheableValue,
    });
    return new DiskStore(cache);
};

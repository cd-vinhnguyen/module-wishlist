import { Scope } from '../enums';
import { Abstract, Type } from '../consts';
/**
 * Generic provider of all types
 */
export declare type GenericProvider<T = any> = Type<Record<any, any>> | ClassProvider<T>;
/**
 * a class provider
 * inspired by @microsoft/tsyringe syntax
 * @deprecated this interface will be removed in the future version!
 */
export interface ClassProvider<T = any> {
    provide: string | symbol | Type<Record<any, any>> | Abstract<Record<any, any>> | Function;
    target: T;
    scope?: Scope;
}

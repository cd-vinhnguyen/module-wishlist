"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
const tslib_1 = require("tslib");
const consts_1 = require("../consts");
const winston_1 = tslib_1.__importStar(require("winston"));
const logger_config_1 = require("./logger.config");
class LoggerInstance {
    static create(options) {
        if (!this._instance)
            this._instance = (0, winston_1.createLogger)(options);
        winston_1.default.addColors(logger_config_1.DEFAULT_LEVEL.colors);
        return this._instance;
    }
}
class Logger {
    constructor(name, opts) {
        this.name = name;
        this._logger = LoggerInstance.create({
            level: (opts === null || opts === void 0 ? void 0 : opts.level) || consts_1.PRODUCTION ? 'error' : 'trace',
            levels: logger_config_1.DEFAULT_LEVEL.levels,
            transports: consts_1.PRODUCTION ? (0, logger_config_1.COMBINED_TRANSPORT_CONSOLE)(name) : [logger_config_1.DEV_TRANSPORT]
        });
    }
    error(message, meta) {
        this._logger.error(message, meta);
    }
    info(message, meta) {
        this._logger.info(message, meta);
    }
    warning(message, meta) {
        this._logger.warn(message, meta);
    }
    verbose(message, meta) {
        this._logger.log('verbose', message, meta);
    }
    fatal(message, meta) {
        this._logger.log('fatal', message, meta);
    }
    trace(message, meta) {
        this._logger.log('trace', message, meta);
    }
}
exports.Logger = Logger;

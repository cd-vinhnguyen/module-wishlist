import { Any, DispatchContext, ExecutableContext } from '../../consts';
export declare const __dispatchAndForget: (target: any, key: string | symbol, args?: Any[]) => void;
export declare const __dispatchAndWait: (target: any, key: string | symbol, args?: Any[]) => Promise<any>;
export declare const __dispatch: <T>(target: any, key: string | symbol, dispatchCtx: DispatchContext<T>) => void;
export declare const __execute: <T extends ExecutableContext<any>, R>(input: {
    target: Any;
    context: T;
    dispatchCtx: DispatchContext<R>;
}) => void;
export declare const _$safe: (args: {
    target: Any;
    name: string;
    params: Any[];
}) => any;

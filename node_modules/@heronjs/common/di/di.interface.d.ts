import { Scope } from '../enums';
export declare type FactoryBindingInstance = {
    token: string;
    instance: any;
    name: string;
    scope?: Scope;
    isDefault?: boolean;
};
/**
 * Module DI Function Declaration Interface
 */
export interface IModuleDI {
    /**
     * resolve object from container
     * use it when you were understood service locator
     * @param target
     * @returns {T}
     */
    __resolve: <T>(target: any) => T;
    /**
     * get target from container
     * @param target
     * @returns {T}
     */
    __getTarget: <T>(target: any) => T;
    /**
     * get object from container
     * @param {{token: string, named?: string}} args
     * @returns {T}
     */
    __get: <T>(args: {
        token: string;
        named?: string;
    }) => T;
    /**
     * binding  self object
     * @param target
     * @returns {any}
     */
    __self: <T>(target: any) => T;
    /**
     * binding self object with scope
     * @param target
     * @param {Scope} scope
     * @returns {any}
     */
    __selfWithScope: <T>(target: any, scope: Scope) => T;
    /**
     * binding self as constant value
     * @param target
     */
    __selfValue: <T>(target: any) => void;
    /**
     *
     * @param {{token: string, value: T, named?: string, isDefault?: boolean}} args
     * @return {T}
     */
    __constantValue: <T>(args: {
        token: string;
        value: T;
        named?: string;
        isDefault?: boolean;
    }) => void;
    /**
     * binding object
     * @param target
     * @param {Scope} scope
     * @param {string} token
     * @returns {any}
     */
    __binding: <T>(target: any, scope: Scope, token?: string) => T;
    /**
     * binding object with default object
     * @param target
     * @param {Scope} scope
     * @param {string} token
     * @param {boolean} isDefault
     * @returns {T}
     */
    __bindingWithDefault: <T>(target: any, scope: Scope, token: string, isDefault?: boolean) => void;
    /**
     * binding object as factory with child container
     * @param {string} token
     * @param {FactoryBinding[]} factoryObjects
     */
    __factoryBinding: <T>(token: string, factoryObjects: FactoryBindingInstance[]) => void;
}

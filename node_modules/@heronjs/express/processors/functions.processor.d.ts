import { CacheValue, FunctionType, OperationDispatcher } from '@heronjs/common';
import express from 'express';
import { Any } from '@heronjs/common/consts';
import { AbstractProcessor } from './abstract.processor';
import { HttpRequest } from '../types';
export declare class FunctionsProcessor extends AbstractProcessor implements OperationDispatcher<Any> {
    apply: <P>(thisArgs: P, metas: {
        type?: FunctionType;
        code: number;
    }, res: express.Response, req?: express.Request) => (fn: () => Any, ...args: Any[]) => Any;
    dispatch: (thisArgs: Any) => (fn: () => Any, ...args: any[]) => Any;
    dispatchWithUri: (thisArgs: Any) => (fn: () => Any, request: HttpRequest, args: Any[], cache?: CacheValue<Any>) => Any;
}
